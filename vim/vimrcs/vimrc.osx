" Pathogen
execute pathogen#infect()

" Enable filetype plugin
filetype plugin on

" indentation
set autoindent
set smarttab
set expandtab
set shiftwidth=4
set softtabstop=4
set tabstop=4

" colors
set background=dark
colorscheme gruvbox

" highlighting
syntax on
set cursorline
set colorcolumn=80
highlight ColorColumn ctermbg=DarkGrey
set hlsearch

"Show trailing whitespace
highlight ExtraWhitespace ctermbg=darkblue guibg=#344011
autocmd BufEnter * exe ':2match ExtraWhitespace /\s\+$\| \+\ze\t\|\t\+\ze /'

" misc
set showcmd
set number
set nocompatible
set incsearch
set backspace=indent,eol,start
set showtabline=2

" Vim. Live it.
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
inoremap <up> <nop>
vnoremap <up> <nop>
vnoremap <down> <nop>
vnoremap <left> <nop>
vnoremap <right> <nop>

" Highlight all occurences of current word without moving
nnoremap <C-b> *``

" Tab switching alternatives to gt/gT
nnoremap <C-l> :tabnext<CR>
nnoremap <C-h> :tabprevious<CR>
nnoremap <C-t> :tabnew 
inoremap <C-l> <Esc>:tabnext<CR>i
inoremap <C-h> <Esc>:tabprevious<CR>i
inoremap <C-t> <Esc>:tabnew 

"Ctrl+R replaces all occurences of selected text in visual mode, Ctrl+Shift+R
"only the selected one
vnoremap <C-r> "hy:%s/<C-r>h//g<left><left>

" Auto-complete brackets
"inoremap {      {}<Left>
inoremap {<CR>  {<CR>}<Esc>O
inoremap {{     {
inoremap {}     {}

" Insert new line at the cursor without entering insert mode
nnoremap <S-Enter> i<CR><Esc>

" Define leader key
let mapleader = ","

" Re-map help command to open vertically
cabbrev help vert help
"cabbrev help tab help

" NERDTree
nmap <leader>d :NERDTree<cr>

"CtrlP
set runtimepath^=~/.vim/bundle/ctrlp.vim
nmap <C-p> :CtrlP<CR>

" vim-airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_detect_modified=1
set laststatus=2

" gitgutter
let g:gitgutter_sign_column_always = 1
