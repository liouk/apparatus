" Pathogen
execute pathogen#infect()
filetype plugin indent on

" Misc settings
set showcmd
" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
syntax on
set background=dark
colorscheme gruvbox
set cursorline

set autoindent
set expandtab
set smarttab
set shiftwidth=4
set softtabstop=4
set number
set nocompatible
set incsearch
set hlsearch
set backspace=indent,eol,start
set showtabline=2
set colorcolumn=80
highlight ColorColumn ctermbg=DarkGrey

"Show trailing whitespace
highlight ExtraWhitespace ctermbg=darkblue guibg=#344011
autocmd BufEnter * exe ':2match ExtraWhitespace /\s\+$\| \+\ze\t\|\t\+\ze /'

" Vim. Live it.
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
inoremap <up> <nop>
vnoremap <up> <nop>
vnoremap <down> <nop>
vnoremap <left> <nop>
vnoremap <right> <nop>

" Highlight all occurences of current word without moving
nnoremap <C-b> *``

" Tab switching alternatives to gt/gT
nnoremap <C-l> :tabnext<CR>
nnoremap <C-h> :tabprevious<CR>
nnoremap <C-t> :tabnew 
inoremap <C-l> <Esc>:tabnext<CR>i
inoremap <C-h> <Esc>:tabprevious<CR>i
inoremap <C-t> <Esc>:tabnew 

"Ctrl+R replaces all occurences of selected text in visual mode, Ctrl+Shift+R
"only the selected one
vnoremap <C-r> "hy:%s/<C-r>h//g<left><left>

" Auto-complete brackets
"inoremap {      {}<Left>
inoremap {<CR>  {<CR>}<Esc>O
inoremap {{     {
inoremap {}     {}

" Insert new line at the cursor without entering insert mode
nnoremap <S-Enter> i<CR><Esc>

" Re-map help command to open vertically
cabbrev help vert help
"cabbrev help tab help

" NERDTree
let mapleader = ","
nmap <leader>d :NERDTree<cr>

""""""
" Go "
""""""
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

""""""""
" Perl "
""""""""

" perltidy
command -range=% -nargs=* Tidy <line1>,<line2>!C:/Personal/Programs/cygwin/home/rinis/bin/Perl-Tidy-20140328/perltidy

"run :Tidy on entire buffer and return cursor to (approximate) original position"
fun DoTidy()
    let l = line(".")
    let c = col(".")
    :Tidy
    call cursor(l, c)
endfun

"shortcut for normal mode to run on entire buffer then return to current line"
au Filetype perl nmap <C-S-f> :call DoTidy()<CR>

"shortcut for visual mode to run on the the current visual selection"
au Filetype perl vmap <C-S-f> :Tidy<CR>

"CtrlP
set runtimepath^=~/.vim/bundle/ctrlp.vim
nmap <C-p> :CtrlP<CR>

" vim-airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_detect_modified=1
set laststatus=2

" gitgutter
let g:gitgutter_sign_column_always = 1
